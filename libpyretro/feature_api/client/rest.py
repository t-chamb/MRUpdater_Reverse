# Source Generated with Decompyle++
# File: rest.pyc (Python 3.10)

'''
    User-Facing Feature Flag API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
'''
import io
import json
import re
import ssl
import urllib3
from libpyretro.feature_api.client.exceptions import ApiException, ApiValueError
SUPPORTED_SOCKS_PROXIES = {
    'socks4',
    'socks5',
    'socks5h',
    'socks4a'}
RESTResponseType = urllib3.HTTPResponse

def is_socks_proxy_url(url):
    if url is None:
        return False
    split_section = None.split('://')
    if len(split_section) < 2:
        return False
    return None[0].lower() in SUPPORTED_SOCKS_PROXIES


class RESTResponse(io.IOBase):
    
    def __init__(self = None, resp = None):
        self.response = resp
        self.status = resp.status
        self.reason = resp.reason
        self.data = None

    
    def read(self):
        if self.data is None:
            self.data = self.response.data
        return self.data

    
    def getheaders(self):
        '''Returns a dictionary of the response headers.'''
        return self.response.headers

    
    def getheader(self, name, default = (None,)):
        '''Returns a given response header.'''
        return self.response.headers.get(name, default)



class RESTClientObject:
    
    def __init__(self = None, configuration = None):
        if configuration.verify_ssl:
            cert_reqs = ssl.CERT_REQUIRED
        else:
            cert_reqs = ssl.CERT_NONE
        pool_args = {
            'cert_reqs': cert_reqs,
            'ca_certs': configuration.ssl_ca_cert,
            'cert_file': configuration.cert_file,
            'key_file': configuration.key_file,
            'ca_cert_data': configuration.ca_cert_data }
        if configuration.assert_hostname is not None:
            pool_args['assert_hostname'] = configuration.assert_hostname
        if configuration.retries is not None:
            pool_args['retries'] = configuration.retries
        if configuration.tls_server_name:
            pool_args['server_hostname'] = configuration.tls_server_name
        if configuration.socket_options is not None:
            pool_args['socket_options'] = configuration.socket_options
        if configuration.connection_pool_maxsize is not None:
            pool_args['maxsize'] = configuration.connection_pool_maxsize
        self
        # Incomplete decompilation - manual review needed
        pass
    def request(self, method, url, headers, body, post_params, _request_timeout = (None, None, None, None)):
        '''Perform requests.

        :param method: http request method
        :param url: http request url
        :param headers: http request headers
        :param body: request json body, for `application/json`
        :param post_params: request post parameters,
                            `application/x-www-form-urlencoded`
                            and `multipart/form-data`
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        '''
        method = method.upper()
        # Assignment completed